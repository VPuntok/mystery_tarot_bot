#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –∫–∞—Ä—Ç–∞–º–∏ –¢–∞—Ä–æ (–∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤)
"""
import os
import django
from pathlib import Path
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from tarot.models import TarotCard

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –¥–ª—è —Å—Ç–∞—Ä—à–∏—Ö –∞—Ä–∫–∞–Ω–æ–≤
EN_RU_MAP = {
    "TheFool": "–®—É—Ç",
    "TheMagician": "–ú–∞–≥",
    "TheHighPriestess": "–í–µ—Ä—Ö–æ–≤–Ω–∞—è –ñ—Ä–∏—Ü–∞",
    "TheEmpress": "–ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞",
    "TheEmperor": "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä",
    "TheHierophant": "–ò–µ—Ä–æ—Ñ–∞–Ω—Ç",
    "TheLovers": "–í–ª—é–±–ª–µ–Ω–Ω—ã–µ",
    "TheChariot": "–ö–æ–ª–µ—Å–Ω–∏—Ü–∞",
    "Strength": "–°–∏–ª–∞",
    "TheHermit": "–û—Ç—à–µ–ª—å–Ω–∏–∫",
    "WheelOfFortune": "–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã",
    "Justice": "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å",
    "TheHangedMan": "–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π",
    "Death": "–°–º–µ—Ä—Ç—å",
    "Temperance": "–£–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
    "TheDevil": "–î—å—è–≤–æ–ª",
    "TheTower": "–ë–∞—à–Ω—è",
    "TheStar": "–ó–≤–µ–∑–¥–∞",
    "TheMoon": "–õ—É–Ω–∞",
    "TheSun": "–°–æ–ª–Ω—Ü–µ",
    "Judgement": "–°—É–¥",
    "TheWorld": "–ú–∏—Ä",
}

# –ú–∞–ø–ø–∏–Ω–≥ –¥–ª—è –º–ª–∞–¥—à–∏—Ö –∞—Ä–∫–∞–Ω–æ–≤
SUITS_RU = {
    'Cups': '–ö—É–±–∫–æ–≤',
    'Swords': '–ú–µ—á–µ–π',
    'Wands': '–ñ–µ–∑–ª–æ–≤',
    'Pentacles': '–ü–µ–Ω—Ç–∞–∫–ª–µ–π',
}
RANKS_RU = {
    '01': '–¢—É–∑',
    '02': '–î–≤–æ–π–∫–∞',
    '03': '–¢—Ä–æ–π–∫–∞',
    '04': '–ß–µ—Ç–≤–µ—Ä–∫–∞',
    '05': '–ü—è—Ç–µ—Ä–∫–∞',
    '06': '–®–µ—Å—Ç–µ—Ä–∫–∞',
    '07': '–°–µ–º–µ—Ä–∫–∞',
    '08': '–í–æ—Å—å–º–µ—Ä–∫–∞',
    '09': '–î–µ–≤—è—Ç–∫–∞',
    '10': '–î–µ—Å—è—Ç–∫–∞',
    '11': '–ü–∞–∂',
    '12': '–†—ã—Ü–∞—Ä—å',
    '13': '–ö–æ—Ä–æ–ª–µ–≤–∞',
    '14': '–ö–æ—Ä–æ–ª—å',
}

def get_russian_name_from_filename(filename):
    # –°—Ç–∞—Ä—à–∏–µ –∞—Ä–∫–∞–Ω—ã
    match = re.match(r'\d{2}-(\w+)', filename)
    if match:
        en = match.group(1)
        return EN_RU_MAP.get(en)
    # –ú–ª–∞–¥—à–∏–µ –∞—Ä–∫–∞–Ω—ã
    match = re.match(r'(Cups|Swords|Wands|Pentacles)(\d{2})', filename)
    if match:
        suit_en, rank_en = match.groups()
        rank_ru = RANKS_RU.get(rank_en)
        suit_ru = SUITS_RU.get(suit_en)
        if rank_ru and suit_ru:
            return f"{rank_ru} {suit_ru}"
    return None

def link_card_images():
    print("üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –∫–∞—Ä—Ç–∞–º–∏ (media/tarot/cards)...")
    images_dir = Path("media/tarot/cards")
    if not images_dir.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {images_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    image_files = list(images_dir.glob("*.jpg")) + list(images_dir.glob("*.png")) + list(images_dir.glob("*.jpeg"))
    if not image_files:
        print(f"‚ùå –í –ø–∞–ø–∫–µ {images_dir} –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!")
        return
    print(f"üì∏ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(image_files)}")
    cards = TarotCard.objects.all()
    cards_dict = {card.name: card for card in cards}
    linked_count = 0
    not_found = []
    for img_file in image_files:
        name_without_ext = img_file.stem
        ru_name = get_russian_name_from_filename(name_without_ext)
        if ru_name and ru_name in cards_dict:
            card = cards_dict[ru_name]
            card.image = f"tarot/cards/{img_file.name}"
            card.save()
            print(f"‚úÖ –°–≤—è–∑–∞–Ω–æ: {ru_name} -> {img_file.name}")
            linked_count += 1
        else:
            not_found.append(img_file.name)
    print(f"\nüìä –°–≤—è–∑–∞–Ω–æ –∫–∞—Ä—Ç: {linked_count}")
    if not_found:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å: {len(not_found)} —Ñ–∞–π–ª–æ–≤")
        for n in not_found[:10]:
            print(f"  - {n}")
        if len(not_found) > 10:
            print(f"  ... –∏ –µ—â–µ {len(not_found)-10} —Ñ–∞–π–ª–æ–≤")
    cards_without_images = [card for card in cards if not card.image]
    if cards_without_images:
        print(f"\n‚ùå –ö–∞—Ä—Ç—ã –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π ({len(cards_without_images)}):")
        for card in cards_without_images[:10]:
            print(f"  - {card.name}")
        if len(cards_without_images) > 10:
            print(f"  ... –∏ –µ—â–µ {len(cards_without_images) - 10} –∫–∞—Ä—Ç")
    print("\n–ì–æ—Ç–æ–≤–æ!")

if __name__ == '__main__':
    link_card_images() 